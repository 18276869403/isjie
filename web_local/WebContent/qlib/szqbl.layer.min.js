(function(win) {
	win.szqbl = win.szqbl || {};
	win.szqbl.openLayer = function(url, title, area, callback) {
		var reg = /<[^>]+>/g;
		var isUrl = !reg.test(url);
		var layerForm = layui.layer.open({
			title : title,
			type : isUrl ? 2 : 0,
			content : url,
			area : typeof area == 'function' ? 'auto' : area || 'auto',
			shade : 0.8,
			maxmin : true, //开启最大化最小化按钮
			yes: function(index, layero) {
				if (callback && typeof callback == 'function') {
					callback(layerForm);
				}
            },
			success : function(layero, index) {
				setTimeout(function() {
					layui.layer.tips('点击此处返回', '.layui-layer-setwin .layui-layer-close', {
						tips : 2
					});
				}, 500)
			},
			cancel : function(index, layero) {
				if (typeof area == 'function') {
					area();
				}
				if (callback && typeof callback == 'function') {
					callback();
				}
				//刷新父页面
				//parent.location.reload(); 
				return true;
			},
			success : function(layero, index) {
				if (!area || typeof area == 'function') {
					layui.layer.full(layerForm);
				}
			}
		});
		if (!area || typeof area == 'function') {
			layui.layer.full(layerForm);
		}
	};

	win.szqbl.openConfirm = function(url, title, callback) {
		layer.confirm(title, {
			icon : 3,
			title : '提示信息'
		}, function(ret) {
			//弹出loading
			var index = layer.msg('数据提交中，请稍候', {
				icon : 16,
				time : false,
				shade : 0.8
			});
			$.get(url, {}, function(data) {
				layer.close(index);
				if(typeof data == "string")
					data = JSON.parse(data);
				if (data.status || data.status == 200) {
					top.layer.msg(data.message);
				} else {
					top.layer.msg(data.message);
				}
				if (callback)
					callback(data);
				layer.close(ret);
			});
		});
	};

	//post
	win.szqbl.openConfirmPost = function(url, data, title, callback, cancel) {
		layer.confirm(title, {
			icon : 3,
			title : '提示信息'
		}, function(ret) {
			//弹出loading
			var index = layer.msg('数据提交中，请稍候', {
				icon : 16,
				time : false,
				shade : 0.8
			});
			$.post(url, data, function(data) {
				layer.close(index);
				if(typeof data == "string")
					data = JSON.parse(data);
				if (data.status || data.status == 200) {
					top.layer.msg(data.message);
				} else {
					top.layer.msg(data.message);
				}
				if (callback)
					callback(data);
				layer.close(ret);
			});
		}, function() {
			if (cancel) {
				cancel();
			}
		});
	};
}(window));